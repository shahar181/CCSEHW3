name: assignment3

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log start time
        run: echo "$(date -Iminutes)" > log.txt

      - name: Log submitter names
        run: echo "Shahar Kronenfeld, Aviv Sharon" >> log.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t mybooks:latest --output type=docker,dest=/tmp/mybooks.tar ./Books
          if [ $? -eq 0 ]; then
            echo "image successfully built" >> log.txt
          else
            echo "image not able to be built" >> log.txt
            exit 1
          fi

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mybooks-image
          path: /tmp/mybooks.tar

      - name: Upload log file after build
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: List downloaded artifacts
        run: ls -lR
      - name: Load Docker image
        run: docker load -i mybooks-image/mybooks.tar
      - name : check images
        run : docker images
      - name: Verify test script
        run: |
            echo "Verifying test script:"
            ls -l tests/assn3_tests.py
            file tests/assn3_tests.py
      - name: Set up Docker Compose
        run: |
          docker-compose up -d
          sleep 20  # Ensure services are up and running
          if [ $? -eq 0 ]; then
            echo "Container up and running" >> log-file/log.txt
          else
            echo "Container failed to run" >> log-file/log.txt
            exit 1
          fi

      - name: Set up Python
        run: |
            python -m pip install --upgrade pip
            pip install pytest requests
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure test scripts are executable
        run: chmod +x tests/*.py

      - name: Run tests
        run: |
          cd tests
          pytest -v assn3_tests.py > ../assn3_test_results.txt || (echo "tests failed" >> ../log-file/log.txt && exit 1)
          echo "tests succeeded" >> ../log-file/log.txt
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Upload log file after test
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log-file/log.txt
          overwrite: true